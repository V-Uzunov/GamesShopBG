@model UsersListingViewModel
@{
    ViewBag.Title = "User Administration";
}

<h2 class="text-default">@ViewBag.Title</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                Username
            </th>
            <th>
                E-mail
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <th>
                    @user.Username
                </th>
                <th>
                    @user.Email
                </th>
                <th>
                    @using (Html.BeginForm("AddToRole", "Users", new { area = "Admin" }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-9">
                                <input type="hidden" name="UserId" value="@user.Id" />
                                @Html.DropDownList("Role", Model.Roles, new { @class = "form-control"})
                            </div>
                            <div class="col-md-9">
                                <input class="btn btn-sm btn-edited" type="submit" value="Add To Role" />

                            </div>
                        </div>
                    }
                    @if (User.IsInRole(GlobalConstants.AdminRole) && user.Username != User.Identity.Name)
                    {
                        using (Html.BeginForm("DeleteUser", "Users", new { area = "Admin", userId = user.Id }))
                        {
                            <div class="row">
                                <div class="col-md-3">
                                    <input class="btn btn-sm btn-danger" type="submit" value="Delete" />
                                </div>
                            </div>
                        }
                    }
                </th>
            </tr>
        }
    </tbody>
</table>